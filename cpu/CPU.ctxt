#BlueJ class context
comment0.params=
comment0.target=CPU()
comment1.params=memAddress
comment1.target=void\ runCPU(int)
comment2.params=
comment2.target=void\ runInstructions()
comment3.params=
comment3.target=void\ fetchInstruction()
comment4.params=
comment4.target=void\ decodeInstruction()
comment4.text=\r\n\ Decodes\ the\ instruction\ register\r\n\ @param\ IR\r\n
comment5.params=binary
comment5.target=int\ getIntFromBinaryArray(int[])
comment5.text=\r\n\ Converts\ a\ binary\ array\ to\ an\ integer\r\n\ @param\ binary\r\n\ @return\r\n
comment6.params=value\ length
comment6.target=int[]\ getBinaryArrayFromInt(int,\ int)
comment6.text=\r\n\ Converts\ an\ integer\ to\ a\ binary\ string.\r\n\ Adapted\ from\ http\://www.asiplease.net/computing/delphi/programs/denary_binary.htm\r\n\ @param\ value\r\n\ @return\r\n
comment7.params=
comment7.target=int\ calculateEA()
comment7.text=\r\n\ Calculates\ the\ effective\ address\ of\ a\ location\ in\ memory.\r\n\ Accounts\ for\ the\ presence\ of\ index/indirect\ bits.\r\n\ @return\ effective\ address\ as\ an\ int.\r\n
comment8.params=opcode
comment8.target=void\ execute(int)
comment8.text=\r\n\ Processes\ the\ CPU\ function.\r\n\ @param\ opcode\r\n
comment9.params=
comment9.target=void\ incrementPC()
comment9.text=\r\n\ Increments\ the\ program\ counter.\r\n
numComments=10
